import "./chunk-S6G64ZP5.js";

// node_modules/@mercator/gl-utils/index.js
var e = function(e2, r2, a2) {
  var t2 = e2.createShader(r2);
  if (t2)
    return e2.shaderSource(t2, a2), e2.compileShader(t2), e2.getShaderParameter(t2, e2.COMPILE_STATUS) ? t2 : (console.error("An error occurred compiling the shaders: " + e2.getShaderInfoLog(t2)), e2.deleteShader(t2), null);
};
var r = function(r2, a2, t2) {
  var n = e(r2, r2.VERTEX_SHADER, a2), o = e(r2, r2.FRAGMENT_SHADER, t2), u = r2.createProgram();
  if (u && n && o)
    return r2.attachShader(u, n), r2.attachShader(u, o), r2.linkProgram(u), r2.getProgramParameter(u, r2.LINK_STATUS) ? u : (console.error("Unable to initialize the shader program: " + r2.getProgramInfoLog(u)), null);
};
var a = function(e2) {
  return new Promise(function(r2, a2) {
    var t2 = new XMLHttpRequest();
    t2.onload = function() {
      t2.readyState === 4 && t2.status === 200 && r2(t2.responseText), a2("request shader file error");
    }, t2.open("GET", e2), t2.send();
  });
};
var t = function(e2, r2, a2) {
  var t2 = e2.createBuffer();
  return e2.bindBuffer(r2, t2), e2.bufferData(r2, a2, e2.STATIC_DRAW), t2;
};
export {
  t as initBuffer,
  r as initShaderProgram,
  a as loadShaderFile
};
//# sourceMappingURL=@mercator_gl-utils.js.map
